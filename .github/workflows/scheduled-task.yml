name: Run Task Every 30 Minutes

on:
  workflow_dispatch:  # Allows manual trigger
  repository_dispatch:  # Enables external API triggering
    types: [manual-retry]  # Match C# event_type
  schedule:
    - cron: '*/30 14-23 * * 1-5'
    - cron: '*/30 0-1 * * 2-6'

concurrency:
  group: run-task-group
  cancel-in-progress: true  # Set to 'true' if you want to cancel the previous run before starting a new one

jobs:
  run-task:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0'

      - name: Run .NET task with retries
        shell: pwsh
        run: |
          $maxAttempts = 1
          $attempt = 0
          
          while ($attempt -lt $maxAttempts) {
            $attempt++
            Write-Host "Attempt $attempt running..."
            
            ./AccuScraperConsole.exe
            $exitCode = $LASTEXITCODE  # Capture the exit code

            if ($exitCode -eq 0) {
              Write-Host "Task succeeded!"
              exit 0  # Stop further execution
            } else {
              Write-Host "Attempt $attempt failed with exit code $exitCode."
              if ($attempt -lt $maxAttempts) {
                Start-Sleep -Seconds 5
              }
            }
          }

          Write-Error "All attempts failed."
          exit 1  # Mark the workflow as failed if all attempts fail
